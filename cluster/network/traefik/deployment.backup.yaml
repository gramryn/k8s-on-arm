apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
- kind: ServiceAccount
  name: traefik-ingress-controller
  namespace: kube-system
---
kind: Service
apiVersion: v1
metadata:
  name: traefik
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
  annotations:
    external-dns.alpha.kubernetes.io/target: home.proxy.camp
spec:
  selector:
    k8s-app: traefik-ingress-lb
  externalTrafficPolicy: Local
  ports:
    - protocol: TCP
      port: 80
      name: web
    - protocol: TCP
      port: 443
      name: https
    - protocol: TCP
      port: 8080
      name: admin
  type: LoadBalancer
  loadBalancerIP: 192.168.1.100
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: acme
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: nvme
  resources:
    requests:
      storage: 100Mi
---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
  labels:
    k8s-app: traefik-ingress-lb
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: traefik-ingress-lb
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
        name: traefik-ingress-lb
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      containers:
      - image: traefik:v1.7
        name: traefik-ingress-lb
        env:
          - name: CLOUDFLARE_EMAIL
            valueFrom:
              secretKeyRef:
                name: cloudflare
                key: email
          - name: CLOUDFLARE_API_KEY
            valueFrom:
              secretKeyRef:
                name: cloudflare
                key: key
        volumeMounts:
        - mountPath: /config
          name: config
        - mountPath: "/etc/traefik"
          name: acme
        ports:
         - name: http
           containerPort: 80
         - name: admin
           containerPort: 8080
        args:
        - --api
        - --kubernetes
        - --configfile=/config/traefik.toml
        livenessProbe:
          httpGet:
            path: /ping
            port: 80
          initialDelaySeconds: 3
          periodSeconds: 3
          timeoutSeconds: 1
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: k8s-app
                  operator: In
                  values:
                  - traefik-ingress-lb
              topologyKey: kubernetes.io/hostname
      volumes:
      - name: config
        configMap:
          name: traefik-conf
      - name: acme
        persistentVolumeClaim:
          claimName: acme